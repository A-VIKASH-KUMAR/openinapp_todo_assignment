{
	"info": {
		"_postman_id": "9439ced5-2a57-413b-bc65-d871e4a833cd",
		"name": "open in app node assignment",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31454101"
	},
	"item": [
		{
			"name": "Get tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NDY1NDksImV4cCI6MTcwNjkzMjk0OX0.5HDSjkDSXWq-50r01PQBTWFSIOAy3UNkpTwzNGMVoiU",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Get tasks",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "336"
						},
						{
							"key": "ETag",
							"value": "W/\"150-uehSEHl7cbN1hb/uT0rnoGS3z1s\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 04:27:21 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65bbedae48a242717d3fdc37\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 8\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"task_id\": 17866,\n            \"status\": \"TODO\",\n            \"subtasks\": [\n                919,\n                172\n            ],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:14:54.141Z\",\n            \"updatedAt\": \"2024-02-02T04:27:09.247Z\",\n            \"__v\": 0\n        }\n    ]\n}"
				},
				{
					"name": "Get task with id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task/17866",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"17866"
							],
							"query": [
								{
									"key": "priority",
									"value": "2",
									"disabled": true
								},
								{
									"key": "due_date",
									"value": "2024-02-02",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "336"
						},
						{
							"key": "ETag",
							"value": "W/\"150-uehSEHl7cbN1hb/uT0rnoGS3z1s\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 06:40:36 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65bbedae48a242717d3fdc37\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 8\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"task_id\": 17866,\n            \"status\": \"TODO\",\n            \"subtasks\": [\n                919,\n                172\n            ],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:14:54.141Z\",\n            \"updatedAt\": \"2024-02-02T04:27:09.247Z\",\n            \"__v\": 0\n        }\n    ]\n}"
				},
				{
					"name": "Get task  with priority",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task/?priority=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								""
							],
							"query": [
								{
									"key": "priority",
									"value": "2"
								},
								{
									"key": "due_date",
									"value": "2024-02-02",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "675"
						},
						{
							"key": "ETag",
							"value": "W/\"2a3-jZ8LUrAD0xDI64Bu4r2qw8k+G8c\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 06:44:02 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65bbf4d7f23d916807601af3\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 9\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"priority\": 2,\n            \"task_id\": 14633,\n            \"status\": \"TODO\",\n            \"subtasks\": [],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:45:27.907Z\",\n            \"updatedAt\": \"2024-02-01T19:45:27.907Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"65bc786832a3e60a4166d075\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 10\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"priority\": 2,\n            \"task_id\": 19865,\n            \"status\": \"TODO\",\n            \"subtasks\": [],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-02T05:06:48.762Z\",\n            \"updatedAt\": \"2024-02-02T05:06:48.762Z\",\n            \"__v\": 0\n        }\n    ]\n}"
				},
				{
					"name": "Get task with due date",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/task/?due_date=2024-02-07",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								""
							],
							"query": [
								{
									"key": "priority",
									"value": "2",
									"disabled": true
								},
								{
									"key": "due_date",
									"value": "2024-02-07"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "1001"
						},
						{
							"key": "ETag",
							"value": "W/\"3e9-+Coerz4U5wmBN1B6lTG3M3AADmw\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 06:44:53 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65bbedae48a242717d3fdc37\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 8\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"task_id\": 17866,\n            \"status\": \"TODO\",\n            \"subtasks\": [\n                919,\n                172\n            ],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:14:54.141Z\",\n            \"updatedAt\": \"2024-02-02T04:27:09.247Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"65bbf4d7f23d916807601af3\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 9\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"priority\": 2,\n            \"task_id\": 14633,\n            \"status\": \"TODO\",\n            \"subtasks\": [],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:45:27.907Z\",\n            \"updatedAt\": \"2024-02-01T19:45:27.907Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"65bc786832a3e60a4166d075\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 10\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"priority\": 2,\n            \"task_id\": 19865,\n            \"status\": \"TODO\",\n            \"subtasks\": [],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-02T05:06:48.762Z\",\n            \"updatedAt\": \"2024-02-02T05:06:48.762Z\",\n            \"__v\": 0\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get sub tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NTEyMjQsImV4cCI6MTcwNjkzNzYyNH0.nbbKMZQ5o_oA0okm4gf6gB-snCAxtgnfpUi9A4KAUSQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/sub-task/17866",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"sub-task",
						"17866"
					],
					"query": [
						{
							"key": "status",
							"value": "0",
							"disabled": true
						},
						{
							"key": "due_date",
							"value": "2024-02-07",
							"disabled": true
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Get sub tasks",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/sub-task/17866",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sub-task",
								"17866"
							],
							"query": [
								{
									"key": "status",
									"value": "0",
									"disabled": true
								},
								{
									"key": "due_date",
									"value": "2024-02-07",
									"disabled": true
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "635"
						},
						{
							"key": "ETag",
							"value": "W/\"27b-gLiuWlyDDid7YOgQO63dX9fztnA\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 07:07:35 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65bc6eb516e8c248b71bd531\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"id\": 919,\n            \"task_id\": 17866,\n            \"status\": 0,\n            \"title\": \"todo tasks test\",\n            \"description\": \"go to grocery store\",\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-02T04:25:25.907Z\",\n            \"updatedAt\": \"2024-02-02T04:25:25.907Z\",\n            \"__v\": 0,\n            \"due_date\": \"2024-02-02T07:07:35.110Z\"\n        },\n        {\n            \"_id\": \"65bc6f1d16e8c248b71bd535\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"id\": 172,\n            \"task_id\": 17866,\n            \"status\": 0,\n            \"title\": \"todo tasks test 1\",\n            \"description\": \"go to grocery store for milk\",\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-02T04:27:09.255Z\",\n            \"updatedAt\": \"2024-02-02T04:27:09.255Z\",\n            \"__v\": 0,\n            \"due_date\": \"2024-02-02T07:07:35.112Z\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "create task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4MDk5ODgsImV4cCI6MTcwNjg5NjM4OH0.69HuGa9ZwO1Et1V00n7VMmiETK9KO37e9i3pmXtmBQw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"todo tasks test 10\",\n    \"description\":\"go to grocery store\",\n    \"dueDate\":\"2024-02-06\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "Post data",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"todo tasks test\",\n    \"description\":\"go to grocery store\",\n    \"dueDate\":\"2024-02-06\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/task",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "326"
						},
						{
							"key": "ETag",
							"value": "W/\"146-fkAwwCnSGpO6tMtHPmeF5gx60zA\""
						},
						{
							"key": "Date",
							"value": "Thu, 01 Feb 2024 13:42:01 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Blog post already exists\",\n    \"data\": {\n        \"_id\": \"65bb9f90a24bafcba26d1067\",\n        \"title\": \"todo tasks test\",\n        \"description\": \"go to grocery store\",\n        \"due_date\": \"2024-02-06T00:00:00.000Z\",\n        \"task_id\": 12222,\n        \"status\": \"TODO\",\n        \"subtasks\": [],\n        \"deleted\": false,\n        \"createdAt\": \"2024-02-01T13:41:36.386Z\",\n        \"updatedAt\": \"2024-02-01T13:41:36.386Z\",\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"phoneNumber\": \"8179885627\",\n    \"username\":\"vikash\",\n    \"password\":\"vikashtest\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "register user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneNumber\": \"8179885627\",\n    \"username\":\"vikash\",\n    \"password\":\"vikashtest\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "326"
						},
						{
							"key": "ETag",
							"value": "W/\"146-fkAwwCnSGpO6tMtHPmeF5gx60zA\""
						},
						{
							"key": "Date",
							"value": "Thu, 01 Feb 2024 13:42:01 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"user already exists\",\n    \"data\": {\n        \"_id\": \"65bbc5f9832b3bf6ac4c243d\",\n        \"priority\": 0,\n        \"username\": \"vikash\",\n        \"password\": \"$2a$10$1zFO4V4tKYSVIY34luMUGu2r7KZCpd8J.HeAWRvDuQ1M/U8e5gx26\",\n        \"tasks\": [],\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\":\"vikash\",\n    \"password\":\"vikashtest\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "login user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"vikash\",\n    \"password\":\"vikashtest\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "589"
						},
						{
							"key": "ETag",
							"value": "W/\"24d-dqN7o6Mdpnzb90CsEmIa1nUYgVw\""
						},
						{
							"key": "Date",
							"value": "Thu, 01 Feb 2024 16:52:59 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"success\",\n    \"message\": \"Login Successful.\",\n    \"data\": [\n        {\n            \"_id\": \"65bbc5f9832b3bf6ac4c243d\",\n            \"priority\": 0,\n            \"username\": \"vikash\",\n            \"password\": \"$2a$10$1zFO4V4tKYSVIY34luMUGu2r7KZCpd8J.HeAWRvDuQ1M/U8e5gx26\",\n            \"tasks\": [],\n            \"__v\": 0\n        }\n    ],\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiYzVmOTgzMmIzYmY2YWM0YzI0M2QiLCJpYXQiOjE3MDY4MDYzNzksImV4cCI6MTcwNjgwNjY3OX0.eurOZ4wCZossvKByC5d7BCn-exnXhK_Qxhv76EhCG5I\",\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiYzVmOTgzMmIzYmY2YWM0YzI0M2QiLCJpYXQiOjE3MDY4MDYzNzksImV4cCI6MTcwNjg5Mjc3OX0.SC7p7Ope0KLS16pCofAsGEM6zgF-2UDz2wkyQgIg6BY\"\n}"
				}
			]
		},
		{
			"name": "add sub task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4MDk5ODgsImV4cCI6MTcwNjg5NjM4OH0.69HuGa9ZwO1Et1V00n7VMmiETK9KO37e9i3pmXtmBQw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"todo tasks test 1\",\n    \"description\":\"go to grocery store for milk\",\n    \"dueDate\":\"2024-02-07\",\n    \"taskId\":17866\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/sub-task",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"sub-task"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "add sub task",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"todo tasks test\",\n    \"description\":\"go to grocery store\",\n    \"dueDate\":\"2024-02-06\",\n    \"taskId\":10418\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/sub-task",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sub-task"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "243"
						},
						{
							"key": "ETag",
							"value": "W/\"f3-OOBGhbmjfyOkyay14virqL2qOU4\""
						},
						{
							"key": "Date",
							"value": "Thu, 01 Feb 2024 17:55:06 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 265,\n        \"task_id\": 10418,\n        \"status\": 0,\n        \"title\": \"todo tasks test\",\n        \"description\": \"go to grocery store\",\n        \"deleted\": false,\n        \"_id\": \"65bbdafab5cb158921bb16a8\",\n        \"createdAt\": \"2024-02-01T17:55:06.909Z\",\n        \"updatedAt\": \"2024-02-01T17:55:06.909Z\",\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Update status and due date of task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NTEyMjQsImV4cCI6MTcwNjkzNzYyNH0.nbbKMZQ5o_oA0okm4gf6gB-snCAxtgnfpUi9A4KAUSQ",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"due_date\": \"2024-02-20\",\n    \"status\":\"DONE\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/task/17866",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task",
						"17866"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Update task to in progress",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"due_date\": \"2024-02-20\",\n    \"status\":\"IN_PROGRESS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/task/17866",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"17866"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "345"
						},
						{
							"key": "ETag",
							"value": "W/\"159-oatzU6FPipsBMmRiOilvnxagJR4\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 07:31:14 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"task\": {\n            \"_id\": \"65bbedae48a242717d3fdc37\",\n            \"user\": \"65bbda7bb5cb158921bb16a1\",\n            \"title\": \"todo tasks test 8\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-20T00:00:00.000Z\",\n            \"task_id\": 17866,\n            \"status\": \"IN_PROGRESS\",\n            \"subtasks\": [\n                919,\n                172,\n                203\n            ],\n            \"deleted\": false,\n            \"createdAt\": \"2024-02-01T19:14:54.141Z\",\n            \"updatedAt\": \"2024-02-02T12:29:11.089Z\",\n            \"__v\": 0\n        },\n        \"updatedSubtasks\": [\n            {\n                \"_id\": \"65bc6eb516e8c248b71bd531\",\n                \"user\": \"65bbda7bb5cb158921bb16a1\",\n                \"id\": 919,\n                \"task_id\": 17866,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": false,\n                \"createdAt\": \"2024-02-02T04:25:25.907Z\",\n                \"updatedAt\": \"2024-02-02T12:29:11.093Z\",\n                \"__v\": 0,\n                \"due_date\": \"2024-02-02T12:29:11.096Z\"\n            },\n            {\n                \"_id\": \"65bc6f1d16e8c248b71bd535\",\n                \"user\": \"65bbda7bb5cb158921bb16a1\",\n                \"id\": 172,\n                \"task_id\": 17866,\n                \"status\": 0,\n                \"title\": \"todo tasks test 1\",\n                \"description\": \"go to grocery store for milk\",\n                \"deleted\": false,\n                \"createdAt\": \"2024-02-02T04:27:09.255Z\",\n                \"updatedAt\": \"2024-02-02T12:29:11.097Z\",\n                \"__v\": 0,\n                \"due_date\": \"2024-02-02T12:29:11.100Z\"\n            },\n            {\n                \"_id\": \"65bc9510f64d8fce684964dc\",\n                \"user\": \"65bbda7bb5cb158921bb16a1\",\n                \"id\": 203,\n                \"task_id\": 17866,\n                \"due_date\": \"2024-02-07T00:00:00.000Z\",\n                \"status\": 0,\n                \"title\": \"todo tasks test 1\",\n                \"description\": \"go to grocery store for milk\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-02T07:09:04.129Z\",\n                \"updatedAt\": \"2024-02-02T12:29:11.100Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T08:11:43.628Z\"\n            }\n        ]\n    }\n}"
				},
				{
					"name": "Update task to done",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"due_date\": \"2024-02-20\",\n    \"status\":\"DONE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/task/17866",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"17866"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "338"
						},
						{
							"key": "ETag",
							"value": "W/\"152-oW6MmSWqpnAPOQLWDa3aAMZTs3M\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 07:32:04 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65bbedae48a242717d3fdc37\",\n        \"user\": \"65bbda7bb5cb158921bb16a1\",\n        \"title\": \"todo tasks test 8\",\n        \"description\": \"go to grocery store\",\n        \"due_date\": \"2024-02-20T00:00:00.000Z\",\n        \"task_id\": 17866,\n        \"status\": \"DONE\",\n        \"subtasks\": [\n            919,\n            172,\n            203\n        ],\n        \"deleted\": false,\n        \"createdAt\": \"2024-02-01T19:14:54.141Z\",\n        \"updatedAt\": \"2024-02-02T07:32:04.526Z\",\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Update status and due date of task Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NTEyMjQsImV4cCI6MTcwNjkzNzYyNH0.nbbKMZQ5o_oA0okm4gf6gB-snCAxtgnfpUi9A4KAUSQ",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"due_date\": \"2024-02-20\",\n    \"status\":\"DONE\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/task/17866",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task",
						"17866"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Update status of sub task",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\":\"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/sub-task/17866",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sub-task",
								"17866"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "315"
						},
						{
							"key": "ETag",
							"value": "W/\"13b-wutEpy5Ec811XAmrneUda2260o0\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 07:37:09 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65bc6eb516e8c248b71bd531\",\n        \"user\": \"65bbda7bb5cb158921bb16a1\",\n        \"id\": 919,\n        \"task_id\": 17866,\n        \"status\": 1,\n        \"title\": \"todo tasks test\",\n        \"description\": \"go to grocery store\",\n        \"deleted\": false,\n        \"createdAt\": \"2024-02-02T04:25:25.907Z\",\n        \"updatedAt\": \"2024-02-02T07:37:09.209Z\",\n        \"__v\": 0,\n        \"due_date\": \"2024-02-02T07:37:09.218Z\"\n    }\n}"
				}
			]
		},
		{
			"name": "Delete task by task id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NTEyMjQsImV4cCI6MTcwNjkzNzYyNH0.nbbKMZQ5o_oA0okm4gf6gB-snCAxtgnfpUi9A4KAUSQ",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/task/10418",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"task",
						"10418"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Delete task by task id",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/task/10418",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"task",
								"10418"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "308"
						},
						{
							"key": "ETag",
							"value": "W/\"134-ibxPI39T1VHMdyeQy+UgTrkbGeY\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 07:42:51 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"task\": {\n            \"_id\": \"65bb9d947c091f37c023cbdb\",\n            \"title\": \"todo tasks\",\n            \"description\": \"go to grocery store\",\n            \"due_date\": \"2024-02-06T00:00:00.000Z\",\n            \"task_id\": 10418,\n            \"status\": \"TODO\",\n            \"subtasks\": [\n                254,\n                708,\n                764,\n                265,\n                936,\n                135\n            ],\n            \"deleted\": true,\n            \"createdAt\": \"2024-02-01T13:33:08.439Z\",\n            \"updatedAt\": \"2024-02-02T12:27:32.754Z\",\n            \"__v\": 0,\n            \"deleted_at\": \"2024-02-02T12:27:32.754Z\"\n        },\n        \"deletedSubtasks\": [\n            null,\n            {\n                \"_id\": \"65bbb0e9ceb7e9a046018d42\",\n                \"id\": 708,\n                \"task_id\": 10418,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-01T14:55:37.735Z\",\n                \"updatedAt\": \"2024-02-02T12:27:32.760Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T12:27:32.760Z\",\n                \"due_date\": \"2024-02-02T12:27:32.762Z\"\n            },\n            {\n                \"_id\": \"65bbb100ceb7e9a046018d45\",\n                \"id\": 764,\n                \"task_id\": 10418,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-01T14:56:00.185Z\",\n                \"updatedAt\": \"2024-02-02T12:27:32.762Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T12:27:32.762Z\",\n                \"due_date\": \"2024-02-02T12:27:32.764Z\"\n            },\n            {\n                \"_id\": \"65bbdafab5cb158921bb16a8\",\n                \"id\": 265,\n                \"task_id\": 10418,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-01T17:55:06.909Z\",\n                \"updatedAt\": \"2024-02-02T12:27:32.765Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T12:27:32.764Z\",\n                \"due_date\": \"2024-02-02T12:27:32.767Z\"\n            },\n            {\n                \"_id\": \"65bc6d7c16e8c248b71bd529\",\n                \"user\": \"65bbda7bb5cb158921bb16a1\",\n                \"id\": 936,\n                \"task_id\": 10418,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-02T04:20:13.003Z\",\n                \"updatedAt\": \"2024-02-02T12:27:32.767Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T12:27:32.767Z\",\n                \"due_date\": \"2024-02-02T12:27:32.770Z\"\n            },\n            {\n                \"_id\": \"65bc6e9616e8c248b71bd52e\",\n                \"user\": \"65bbda7bb5cb158921bb16a1\",\n                \"id\": 135,\n                \"task_id\": 10418,\n                \"status\": 0,\n                \"title\": \"todo tasks test\",\n                \"description\": \"go to grocery store\",\n                \"deleted\": true,\n                \"createdAt\": \"2024-02-02T04:24:54.324Z\",\n                \"updatedAt\": \"2024-02-02T12:27:32.770Z\",\n                \"__v\": 0,\n                \"deleted_at\": \"2024-02-02T12:27:32.770Z\",\n                \"due_date\": \"2024-02-02T12:27:32.772Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Delete sub task by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWJiZGE3YmI1Y2IxNTg5MjFiYjE2YTEiLCJwaG9uZU51bWJlciI6IjgxNzk4ODU2MjciLCJpYXQiOjE3MDY4NTEyMjQsImV4cCI6MTcwNjkzNzYyNH0.nbbKMZQ5o_oA0okm4gf6gB-snCAxtgnfpUi9A4KAUSQ",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/sub-task/203",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"sub-task",
						"203"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Delete sub task",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/sub-task/203",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"sub-task",
								"203"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "365"
						},
						{
							"key": "ETag",
							"value": "W/\"16d-loBrg94ytjMUhgoQtRxduXQOHcI\""
						},
						{
							"key": "Date",
							"value": "Fri, 02 Feb 2024 08:11:43 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65bc9510f64d8fce684964dc\",\n        \"user\": \"65bbda7bb5cb158921bb16a1\",\n        \"id\": 203,\n        \"task_id\": 17866,\n        \"due_date\": \"2024-02-07T00:00:00.000Z\",\n        \"status\": 0,\n        \"title\": \"todo tasks test 1\",\n        \"description\": \"go to grocery store for milk\",\n        \"deleted\": true,\n        \"createdAt\": \"2024-02-02T07:09:04.129Z\",\n        \"updatedAt\": \"2024-02-02T08:11:43.628Z\",\n        \"__v\": 0,\n        \"deleted_at\": \"2024-02-02T08:11:43.628Z\"\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}